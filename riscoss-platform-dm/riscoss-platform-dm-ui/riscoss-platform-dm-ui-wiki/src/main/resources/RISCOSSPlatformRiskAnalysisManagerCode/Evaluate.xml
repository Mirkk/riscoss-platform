<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>RISCOSSPlatformRiskAnalysisManagerCode</web>
  <name>Evaluate</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>RISCOSSPlatformRiskAnalysisManagerCode.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1398604023000</creationDate>
  <date>1398605572000</date>
  <contentUpdateDate>1398605572000</contentUpdateDate>
  <version>1.1</version>
  <title>Evaluate '$request.entity'</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}
#if(!($request.entity &amp;&amp; $request.riskConfiguration &amp;&amp; $request.riskAnalysisSession))
  {{error}} Missing parameters {{/error}}
#else
  #set($riskAnalysisSessionDocument = $xwiki.getDocument($request.riskAnalysisSession))
  #set($entityDocument = $xwiki.getDocument($request.entity))
  #set($layer = $entityDocument.getObject("RISCOSSPlatformLayerManagerCode.EntityClass").getProperty("layer").value)
  #set($riskConfigurationDocument = $xwiki.getDocument($request.riskConfiguration))  
  #set($layerRiskConfiguration = $riskConfigurationDocument.getObject("RISCOSSPlatformRiskConfigurationManagerCode.LayerRiskConfigurationClass", "layer", $layer))
  #set($riskModel = $riskConfigurationDocument.getAttachment($layerRiskConfiguration.getProperty("riskModel").value).getContentAsString())
  #set($rae = $services.riscoss.riskAnalysisEngineService.createInstance())
  $rae.loadModel($riskModel)    

  #if($request.evaluate)
        
    #set($evidences = {})

    #foreach($parameterName in $request.parameterNames)
      #if($parameterName.startsWith("input,"))
        #set($fieldName = $parameterName.split(",")[1])                 
        #set($evidence = $services.riscoss.riskAnalysisEngineUtilsService.createEvidence($request.getParameter("input,${fieldName},p"), $request.getParameter("input,${fieldName},n")))
        #set($discard = $evidences.put($fieldName, $evidence))
      #end
    #end
  
    #set($inputChunks = $services.riscoss.riskAnalysisEngineUtilsService.getInputs($rae))
    #foreach($inputChunk in $inputChunks)
      #set($field = $services.riscoss.riskAnalysisEngineUtilsService.getInputField($rae, $inputChunk)) ##
      $field.setValue($evidences.get($inputChunk.id)) ##
      $services.riscoss.riskAnalysisEngineUtilsService.setInputField($rae, $inputChunk, $field) ##
    #end
  
    #set($discard = $rae.runAnalysis([]))
    
    #set($result = {})
    #foreach($outputChunk in $services.riscoss.riskAnalysisEngineUtilsService.getOutputs($rae))
      #set($field = $services.riscoss.riskAnalysisEngineUtilsService.getOutputField($rae, $outputChunk))
      #set($evidence = $field.value)
      #set($item = {})
      #set($discard = $item.put("description", $services.riscoss.riskAnalysisEngineUtilsService.getDescription($rae, $outputChunk)))
      #set($discard = $item.put("evidence", $evidence))
      #set($discard = $result.put($outputChunk.id, $item))
    #end
    
    #set($riskEvaluationObject = $riskAnalysisSessionDocument.getObject("RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass", "riskConfiguration", $request.riskConfiguration))
    #if(!$riskEvaluationObject) 
      #set($n = $riskAnalysisSessionDocument.createObject("RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass"))
      #set($riskEvaluationObject = $riskAnalysisSessionDocument.getObject("RISCOSSPlatformRiskAnalysisManagerCode.RiskEvaluationClass", $n))
    #end
    
    $riskEvaluationObject.set("riskConfiguration", $request.riskConfiguration)
    $riskEvaluationObject.set("result", $jsontool.serialize($result))
    $riskAnalysisSessionDocument.save("Evaluation of ${request.riskConfiguration}")
    
    $response.sendRedirect($riskAnalysisSessionDocument.getURL())
  #else 
    
  
== Parameters for evaluating '$riskConfigurationDocument.title'
  
    {{html}}

      &lt;form method="POST"&gt;
        &lt;input type="hidden" name="evaluate" value="true"/&gt;
        &lt;input type="hidden" name="entity" value="${request.entity}"/&gt;
        &lt;input type="hidden" name="riskConfiguration" value="${request.riskConfiguration}"/&gt;
        &lt;input type="hidden" name="riskAnalysisSession" value="${request.riskAnalysisSession}"/&gt;
      
        &lt;table&gt;  
    #set($inputChunks = $services.riscoss.riskAnalysisEngineUtilsService.getInputs($rae))
    #foreach($inputChunk in $inputChunks)
          &lt;tr&gt;
            &lt;td&gt;$services.riscoss.riskAnalysisEngineUtilsService.getQuestion($rae, $inputChunk)&lt;/td&gt;
            &lt;td&gt;&lt;input type="text" name="input,${inputChunk.id},p"/&gt;&lt;/td&gt;
            &lt;td&gt;&lt;input type="text" name="input,${inputChunk.id},n"/&gt;&lt;/td&gt;
          &lt;/tr&gt;
    #end
          &lt;tr&gt;&lt;td colspan="3"&gt;&lt;input type="submit" value="Evaluate" class="button"/&gt;&lt;/td&gt;&lt;/tr&gt;
        &lt;/table&gt;
      &lt;/form&gt;
    {{/html}}
  #end
#end
{{/velocity}}</content>
</xwikidoc>
